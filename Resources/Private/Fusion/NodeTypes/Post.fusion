prototype(MIWeb.Neos.Blog:Post) < prototype(Neos.NodeTypes:Page) {
    body.content.main = MIWeb.Neos.Blog:PostRenderer
}

prototype(MIWeb.Neos.Blog:PostRenderer) < prototype(Neos.Fusion:Template) {
    templatePath = 'resource://MIWeb.Neos.Blog/Private/Templates/NodeTypes/Post.html'
    node = ${node}
    title = ${q(node).property('title')}
    author = ${q(node).property('author')}
    datePublished = ${q(node).property('datePublished')}

    # Render the main ContentCollection of the Post like a page would
    main = Neos.Neos:ContentCollection {
        nodePath = 'main'
    }

    # Render an additional ContentCollection for comments
    #comments = Neos.Neos:ContentCollection {
    #    nodePath = 'comments'
    #}

    #numberOfComments = ${q(node).children('comments').children('[spam = false]').count()}

    #@cache {
        #mode = 'cached'
        #entryIdentifier {
            #node = ${node}
            #content = 'blogpost'
        #}
        #entryTags {
            #1 = ${'Node_' + node.identifier}
            #2 = ${'DescendantOf_' + q(node).find('main').property('_identifier')}
            #3 = ${'DescendantOf_' + q(node).find('comments').property('_identifier')}
        #}
    #}
}
